---
- name: Setup Prometheus and Node Exporter for Grafana
  hosts: prometheus
  become: yes
  become_method: sudo
  remote_user: ubuntu
  tasks:
    - name: Get latest Linux package updates
      ansible.builtin.apt:
        update_cache: yes


    - name: Create a directory /etc/prometheus
      ansible.builtin.file:
        path: /etc/prometheus
        state: directory
        mode: '0775'


    - name: Create a directory /var/lib/prometheus
      ansible.builtin.file:
        path: /var/lib/prometheus
        state: directory
        mode: '0775'
    
    
    - name: Download latest version of node-exporter
      ansible.builtin.get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v2.41.0/prometheus-2.41.0.linux-amd64.tar.gz
        dest: /home/ubuntu


    - name: Extract prometheus-2.41.0.linux-amd64.tar.gz
      ansible.builtin.unarchive:
        src: /home/ubuntu/prometheus-2.41.0.linux-amd64.tar.gz
        dest: /home/ubuntu
        remote_src: yes


    - name: Copy prometheus binary to /usr/local/bin
      ansible.builtin.copy:
        src: /home/ubuntu/prometheus-2.41.0.linux-amd64/prometheus
        dest: /usr/local/bin
        mode: '755'
        remote_src: yes


    - name: Copy promtool binary to /usr/local/bin
      ansible.builtin.copy:
        src: /home/ubuntu/prometheus-2.41.0.linux-amd64/promtool
        dest: /usr/local/bin
        mode: '755'
        remote_src: yes
    

    - name: Copy /home/ubuntu/prometheus-2.41.0.linux-amd64/consoles/ /etc/prometheus/
      ansible.builtin.copy:
        src: /home/ubuntu/prometheus-2.41.0.linux-amd64/consoles/
        dest: /etc/prometheus/
        mode: '775'
        remote_src: yes


    - name: Copy /home/ubuntu/prometheus-2.41.0.linux-amd64/console_libraries/ /etc/prometheus/
      ansible.builtin.copy:
        src: /home/ubuntu/prometheus-2.41.0.linux-amd64/console_libraries/
        dest: /etc/prometheus/
        mode: '775'
        remote_src: yes

   
    - name: Copy /home/ubuntu/prometheus-2.41.0.linux-amd64/prometheus.yml /etc/prometheus/prometheus.yml
      ansible.builtin.copy:
        src: /home/ubuntu/prometheus-2.41.0.linux-amd64/prometheus.yml
        dest: /etc/prometheus/
        mode: '775'
        remote_src: yes


    - name: Verify Prometheus
      command: prometheus --version
      register: prometheus
    - debug:
        var: prometheus.stdout_lines


    - name: Verify Promtool
      command: promtool --version
      register: promtool
    - debug:
        var: promtool.stdout_lines

  
    - name: Ensure system group "prometheus" exists
      ansible.builtin.group:
        name: prometheus
        system: true
        state: present

  
    - name: Add the user 'james' with a bash shell, appending the group 'admins' and 'developers' to the user's groups
      user:
        name: prometheus
        shell: /sbin/nologin
        groups: prometheus
        system: true
        

    - name: Change ownership /etc/prometheus/ to prometheus
      ansible.builtin.file:
        path: /etc/prometheus/
        state: directory
        recurse: yes
        owner: prometheus
        group: prometheus
        mode: '775'   


    - name: Change ownership /var/lib/prometheus/ to prometheus
      ansible.builtin.file:
        path: /var/lib/prometheus/
        state: directory
        recurse: yes
        owner: prometheus
        group: prometheus
        mode: '775'


    - name: Copy systemd Unit file for prometheus service
      copy:
        src: "/mnt/c/Users/rdsal/git_projects/monitoring/prometheus.service"
        dest: "/etc/systemd/system/prometheus.service"

    - name: Update promestheus.yml file with node IPs
      copy:
        src: "/mnt/c/Users/rdsal/git_projects/monitoring/prometheus.yml"
        dest: "/etc/prometheus/prometheus.yml"


    - name: Start prometheus service
      ansible.builtin.service:
        name: prometheus
        state: started


    - name: Enable service prometheus
      ansible.builtin.service:
        name: prometheus
        enabled: yes

    - name: Verify Prometheus Service Status
      command: sudo systemctl status prometheus
      register: status
    - debug:
        var: status.stdout_lines


    - name: Download latest version of node-exporter
      ansible.builtin.get_url:
        url: https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz
        dest: /home/ubuntu
        
    
    - name: Extract node_exporter-1.5.0.linux-amd64.tar.gz
      ansible.builtin.unarchive:
        src: /home/ubuntu/node_exporter-1.5.0.linux-amd64.tar.gz
        dest: /home/ubuntu
        remote_src: yes


    - name: Copy file "node_exporter-1.5.0.linux-amd64" to /usr/local/bin
      ansible.builtin.copy:
        src: /home/ubuntu/node_exporter-1.5.0.linux-amd64/node_exporter
        dest: /usr/local/bin
        mode: '755'
        remote_src: yes

    
    - name: Rremove "node_exporter-1.5.0.linux-amd64" directory
      ansible.builtin.file:
        path: ./node_exporter-1.5.0.linux-amd64
        state: absent
    

    - name: Add the user "node-exporter"
      ansible.builtin.user:
        name: node_exporter
        shell: /bin/false
        create_home: false


    - name: Change ownership node_exporter file
      ansible.builtin.file:
        path: /usr/local/bin/node_exporter
        state: file
        owner: node_exporter
        group: node_exporter   


    - name: Copy systemd Unit file for node-exporter service
      copy:
        src: "/mnt/c/Users/rdsal/git_projects/monitoring/node_exporter.service"
        dest: "/etc/systemd/system/node_exporter.service"

   
    - name: Reload Daemon
      ansible.builtin.systemd:
        daemon_reload: yes

 
    - name: ReStart node_exporter service
      ansible.builtin.service:
        name: node_exporter
        state: restarted


    - name: Enable service node_exporter
      ansible.builtin.service:
        name: node_exporter
        enabled: yes


    - name: Verify node-exporter Service Status
      command: systemctl status node_exporter
      register: status
    - debug:
        var: status.stdout_lines


    - name: Install "stress-ng" for Stress Tests
      command: snap install stress-ng


    - name: ReStart "snapd" service
      ansible.builtin.service:
        name: snapd
        state: restarted

   

  
    
      